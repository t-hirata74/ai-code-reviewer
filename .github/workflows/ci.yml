name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  web:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json
    
    - name: Install dependencies
      working-directory: ./apps/web
      run: npm ci
    
    - name: Run type check
      working-directory: ./apps/web
      run: npm run type-check
    
    - name: Run linter
      working-directory: ./apps/web
      run: npm run lint
    
    - name: Run tests
      working-directory: ./apps/web
      run: npm test
    
    - name: Build
      working-directory: ./apps/web
      run: npm run build

  api:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ai_code_reviewer_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3.1'
        bundler-cache: true
        working-directory: ./apps/api
    
    - name: Setup database
      working-directory: ./apps/api
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/ai_code_reviewer_test
        RAILS_ENV: test
      run: |
        bundle exec rails db:create
        bundle exec rails db:schema:load
    
    - name: Run tests
      working-directory: ./apps/api
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/ai_code_reviewer_test
        RAILS_ENV: test
      run: bundle exec rspec
    
    - name: Run rubocop
      working-directory: ./apps/api
      run: bundle exec rubocop

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'